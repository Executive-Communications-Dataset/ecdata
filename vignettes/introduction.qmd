---
title: "Introduction to ECD"
format: html
---

In this vignette I introduce you to the basic functions of the `ecdata` package. You can download the latest stable releases of the packages through CRAN and PyPi 

```{r}
library(ecdata)
library(dplyr)

```



```{python}

import ecdata as ec
import polars as pl

```

:::panel-tabset


### R

```{r}
#| eval: false
install.packages('ecdata')
library(ecdata)
library(dplyr)


```



### Python

```{python}
#| eval: false

%pip install ecdata
%pip install polars

import ecdata as ec
import polars as pl


```



:::



### `load_ecd`

The primary function that is shared across the Python and R distributions of the package is the `load_ecd` function. This function accepts four primary arguments:


```{r}
#| echo: false

tibble::tribble(~'Argument', ~`R Specific Quirks`, ~`Python Specific Quirks`, 
                            'country', 'A String/A String Vector', 'String, Dictionary, or List',
                            'language',  'A String/A String Vector', 'String, Dictionary, or List',
                            'full_ecd', 'A boolean if set to TRUE downloads full dataset. Defaults to FALSE', 'A boolean if set to True downloads full dataset. Defaults to False',
                            'ecd_version', 'A character string of the ECD version you want to download. Defaults to latest version', 'A character string of the ECD version you want to download. Defaults to latest version') |>
                                tinytable::tt()


```

Functionally the `ecd_version` argument is not entirely useful since there has only been one release of the data. 


Say we only wanted data for South Korea^[I choose South Korea because the underlying file is relatively small compared to some of the other country files.] we can simply set the country argument like this: 

:::panel-tabset
### R 
```{r}

rok = load_ecd(country = 'Republic of Korea')

head(rok, 2)

```

###  Python

```{python}

rok = ec.load_ecd(country = 'Republic of Korea', ecd_version = '1.0.0', cache = False)

rok.head(2)

```

:::
We implement caching by default so you will get a pretty shouty warning every few hours in R. `load_ecd` has some tolerance for common names, abbreviations, and mixed punctuations of countries so if we wanted to download the same data using `RK`, `ROK`, or `South Korea` these will all download the South Korean data. 

:::panel-tabset

### R 

```{r}

sk = load_ecd(country = 'South Korea')

```

### Python

```{python}

sk = ec.load_ecd(country = 'South Korea')

```

:::

If you are not interested in single country case studies you can feed multiple countries to the country argument. In R we use a string vector. For Python you can use a list! 



```{python}

list_version = ec.load_ecd(country = ['South Korea', 'Turkey'])


```


The same functionality is extended to the language argument too!


## lazy_load_ecd

Both versions of the package allow you to use lazy loading to defer computation till you are done querying the dataset. To do this all you need to is call `lazy_load_ecd` 

:::panel-tabset

### R 

```{r}

turkey_korea_lazy = lazy_load_ecd(country = c('South Korea', 'Turkey')) 

turkey_korea_lazy |>
  filter(country == 'Turkey') |>
  collect() |>
  head(2)


```


### Python

```{python}

turkey_rok_lazy = ec.lazy_load_ecd(['South Korea','Turkey'])

turkey_rok_lazy.filter(pl.col('country') == 'Turkey').collect().head(2)


```



:::


